// <auto-generated />
using System;
using GB_Corporation.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GB_Corporation.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220622221215_AddHiringEntities")]
    partial class AddHiringEntities
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.4");

            modelBuilder.Entity("GB_Corporation.Models.Applicant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NameRu")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PatronymicRu")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("StatusId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SurnameEn")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SurnameRu")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("StatusId");

                    b.ToTable("Applicants");
                });

            modelBuilder.Entity("GB_Corporation.Models.ApplicantHiringData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ForeignLanguage")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ForeignLanguageResult")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LineManagerDescription")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("LineManagerId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ProgrammingLanguageId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProgrammingLanguageResult")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TeamLeaderDescription")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("TeamLeaderId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("LineManagerId");

                    b.HasIndex("ProgrammingLanguageId");

                    b.HasIndex("TeamLeaderId");

                    b.ToTable("ApplicantHiringDatas");
                });

            modelBuilder.Entity("GB_Corporation.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("LanguageId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NameRu")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PatronymicRu")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("RoleId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StatusId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SurnameEn")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SurnameRu")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("WorkPhone")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("LanguageId");

                    b.HasIndex("RoleId");

                    b.HasIndex("StatusId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("GB_Corporation.Models.HiringData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ApplicantHiringDataIds")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("ApplicantId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ApplicantId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("HiringDatas");
                });

            modelBuilder.Entity("GB_Corporation.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("GB_Corporation.Models.SuperDictionary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DictionaryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("SuperDictionaries");
                });

            modelBuilder.Entity("GB_Corporation.Models.Template", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Link")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Templates");
                });

            modelBuilder.Entity("GB_Corporation.Models.TestCompetencies", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TestResult")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("TestCompetencies");
                });

            modelBuilder.Entity("GB_Corporation.Models.Applicant", b =>
                {
                    b.HasOne("GB_Corporation.Models.SuperDictionary", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Status");
                });

            modelBuilder.Entity("GB_Corporation.Models.ApplicantHiringData", b =>
                {
                    b.HasOne("GB_Corporation.Models.Employee", "LineManager")
                        .WithMany()
                        .HasForeignKey("LineManagerId");

                    b.HasOne("GB_Corporation.Models.SuperDictionary", "ProgrammingLanguage")
                        .WithMany()
                        .HasForeignKey("ProgrammingLanguageId");

                    b.HasOne("GB_Corporation.Models.Employee", "TeamLeader")
                        .WithMany()
                        .HasForeignKey("TeamLeaderId");

                    b.Navigation("LineManager");

                    b.Navigation("ProgrammingLanguage");

                    b.Navigation("TeamLeader");
                });

            modelBuilder.Entity("GB_Corporation.Models.Employee", b =>
                {
                    b.HasOne("GB_Corporation.Models.SuperDictionary", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GB_Corporation.Models.SuperDictionary", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId");

                    b.HasOne("GB_Corporation.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GB_Corporation.Models.SuperDictionary", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Language");

                    b.Navigation("Role");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("GB_Corporation.Models.HiringData", b =>
                {
                    b.HasOne("GB_Corporation.Models.Applicant", "Applicant")
                        .WithMany()
                        .HasForeignKey("ApplicantId");

                    b.HasOne("GB_Corporation.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.Navigation("Applicant");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("GB_Corporation.Models.TestCompetencies", b =>
                {
                    b.HasOne("GB_Corporation.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });
#pragma warning restore 612, 618
        }
    }
}
